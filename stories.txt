Todo
- await(predicate: A +> Boolean, timeout: Long)
- change history
- stream
- rx

Done
+ add Modify[A].andCalc[B]
+ add Modify[A].andGet: ModifyAndGet[A]
+ add Update[A, B].lens(C](lens: Lens[C, A]): Update[C, B]
+ add Update[A, B].xmap[C](aToC: A => C, cToA: C => A): Update[C, B]
+ add Update[A, B].mao[C](f: B => C): Update[A, C]
+ add map to Reader[A]
+ add reader
+ add transform
+ add sortWith
+ add sortBy
+ add sorted for CC[_] <: Seq[_]
+ add sorted to SharedList
+ pimp Shared[List[A]] to behave a bit like ListBuffer[A]
+ lens
+ xmap shared (i.e. provide an instance of InvariantFunctor[Shared])
+ reify modifyAndCalc
+ reify modifyAndGet
+ reify modify
+ modifyAndCalc
+ modifyAndGet returns new value
+ modify returns old value
+ modify is thread safe
+ Can modify value
+ Can get initial value
